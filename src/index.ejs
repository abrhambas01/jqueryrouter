<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Demo</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M"
        crossorigin="anonymous" />
    <link rel="stylesheet" href="/css/demo.css" type="text/css" />
</head>

<body>
    <div class="container-fluid c-container-fluid">
        <header>
            <nav class="navbar navbar-expand-md navbar-light bg-light fixed-top">
                <div class="container">
                    <h1 class="navbar-brand c-navbar-brand"><a href="/">JQuery Router v<%=version%></a></h1>
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent"
                        aria-expanded="false" aria-label="Toggle Navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                    <div class="collapse navbar-collapse" id="navbarContent">
                        <ul class="navbar-nav mr-auto">
                            <li class="nav-item c-nav-item js-nav-item js-home-link <% if (path.match(/^\/$/)) {%>active<% } %>" data-route="/">
                                <a tabindex="0" role="button" class="home nav-link">Summary</a>
                            </li>
                            <li class="nav-item c-nav-item js-nav-item js-demo-link-1 <% if (path.match(/\/demos\/demo1/)) {%>active<% } %>" data-route="/demos/demo1">
                                <a tabindex="0" role="button" class="demo nav-link">Switch between accordion</a>
                            </li>
                            <li class="nav-item c-nav-item js-nav-item js-demo-link-2 <% if (path.match(/\/demos\/demo2/)) {%>active<% } %>" data-route="/demos/demo2">
                                <a tabindex="0" role="button" class="demo2 nav-link">Overlay routes</a>
                            </li>
                            <li class="nav-item c-nav-item js-nav-item js-demo-link-3 <% if (path.match(/\/demos\/demo3/)) {%>active<% } %>"  data-route="/demos/demo3/John/Doe" data-query-string="q1=Hello&q2=World">
                                <a tabindex="0" role="button" class="demo3 nav-link">Passing Data</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        </header>
        <section class="container body-section">
            <div class="c-home-section js-home-section js-demos <% if (!path.match(/^\/$/)) { %>d-none<% } %>">
                <h2>Welcome to jQuery router homepage</h2>
                <div class="desc">
                    This DEMO demonstrates how to use jQuery router in real world scenarios. The tabs section in this DEMO is powered
                    <br/>by jQuery router plugin. Try it yourself!
                    <br/><b>Please note that</b> this DEMO uses Bootstrap 4 which is not supported in older browsers such as IE9.
                </div>
                <h2>Basics</h2>
                <div class="desc">
                    JQuery router uses history API to set routes, and provides with a mechanism to update view according to current
                    <br/>active route.
                    <br/>The route is changed using <code>$.router.set</code> method.<br/> To change the view we use a route handler
                    <pre><code>
    $("#viewToBeActivated").route("/path/to/route", function () {
        $all.addClass("d-none");
        $(this).removeClass("d-none");
    });
                    </code></pre>
                    <br/>
                    JQuery router fallbacks to hash routes if history API is not fully supported (e.g. IE9).<br/>
                    <img src="/images/hashRoutes.PNG" alt="hash route image" class="img" />
                    <br/>
                </div>
            </div>
            <div class="c-demo-1 js-demo-1 js-demos <% if (!path.match(/\/demos\/demo1/)) { %>d-none<% } %>">
                <h2>Demo 1: Switch between accordion</h2>
                <div class="desc">
                This demo shows how jquery router can be used to navigate in accordion. For demonstration purpose we have used hash routes.
                </div>
                <div id="accordion" class="c-accordion" role="tablist" aria-multiselectable="true">
                    <div class="card">
                        <div class="card-header js-card-reader" role="tab" id="headingOne">
                        <h5 class="mb-0">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne" data-route="/tab1">
                            Collapsible Group Item #1
                            </a>
                        </h5>
                        </div>

                        <div id="collapseOne" class="collapse show" role="tabpanel" aria-labelledby="headingOne">
                        <div class="card-block">
                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
                        </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header js-card-reader" role="tab" id="headingTwo">
                        <h5 class="mb-0">
                            <a class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo" data-route="/tab2">
                            Collapsible Group Item #2
                            </a>
                        </h5>
                        </div>
                        <div id="collapseTwo" class="collapse" role="tabpanel" aria-labelledby="headingTwo">
                        <div class="card-block">
                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
                        </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header js-card-reader" role="tab" id="headingThree">
                        <h5 class="mb-0">
                            <a class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree" data-route="/tab3">
                            Collapsible Group Item #3
                            </a>
                        </h5>
                        </div>
                        <div id="collapseThree" class="collapse" role="tabpanel" aria-labelledby="headingThree">
                        <div class="card-block">
                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
                        </div>
                        </div>
                    </div>
                </div>
                <div class="desc">
                <b>Notice that</b> when you switch between accordion tabs hash routes gets changed which activates the corresponding tab. You can also check this behaviour by going back and forth in browser history.<br/>
                </div>
                <h2>How does it work?</h2>
                We have added handlers for hash routes "/tab1", "tab2", and "/tab3" as shown below.
                <pre><code>
    $.route("/tab1", function () {
        $accordionLinks.filter("[data-route='/tab1']").trigger("click");
    });
    $.route("/tab2", function () {
        $accordionLinks.filter("[data-route='/tab2']").trigger("click");
    });
    $.route("/tab3", function () {
        $accordionLinks.filter("[data-route='/tab3']").trigger("click");
    });
                </code></pre>
                We then trigger a hash route as below:
                <pre><code>
    $accordionLinks.on("click", function () {
        $.router.set("#" + $(this).data("route"));
    });
                </code></pre>
                The hash route is activated using special character # passed in the parameter to <code>set</code> method.
            </div>
            <div class="c-demo-2 js-demo-2 js-demos <% if (!path.match(/\/demos\/demo2/)) { %>d-none<% } %>">
                <h2>Demo 2: Overlay routes</h2>
                <div class="desc">In this demo we will see how we can use route mechanism in overlays.</div><br/>
                <button type="button" class="btn btn-primary js-modal-open" data-route="/modalRoute">
                Launch overlay
                </button>

                <!-- Modal -->
                <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                        <button type="button" class="close js-modal-close" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        This is some sample text
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary js-modal-close">Close</button>
                        <button type="button" class="btn btn-primary js-modal-save">Save changes</button>
                    </div>
                    </div>
                </div>
                </div>
                <h2>How does it work?</h2>
                <div class="desc">
                First we create a handler for overlay and call bootstrap modal function:
                <pre><code>
    $.route("/modalRoute", function () {
        $modal.modal("show");
    });
                </code></pre>
                Then we trigger hash route on button click
                <pre><code>
    $modalOpen.on("click", function () {
        $.router.set("#/modalRoute");
    });
                </code></pre>
                Now opening and closing of overlay is controlled by jquery router. To close the modal we call <code>history.back()</code> which works seamlessly:
                <pre><code>
    $modalClose.on("click", function () {
        history.back();
    });
                </code></pre>
                Please note that <code>history.back()</code> only works if previous route knows how to close modal if it's in open state.
                <pre><code>
    $("#currentView").route("/demos/demo1", function () {
        ...
        $modal.modal("hide");
    });
                </code></pre>
                </div> 
            </div>
            <div class="c-demo-3 js-demo-3 js-demos <% if (!path.match(/\/demos\/demo3/)) { %>d-none<% } %>">
                <h2>Demo 3: Passing data</h2>
                <div class="desc">
                    JQuery router allows data to be passed in following 3 ways:
                    <ol>
                        <li>Directly using <code>$.router.set</code></li>
                        <li>Route parameters</li>
                        <li>Query parameters</li>
                    </ol>
                    Refer to the section below which shows different ways data can be passed to a route handler. Data passed through #2 and #3 methods can be directly tested by making modifications in URL.<br/>To simulate #1, trigger the route from developer console to see if your changes reflect.
                    <h2>#1 Data</h2>
                    <pre><code class="js-set-data">Waiting for data...</code></pre>
                    <h2>#2 Data</h2>
                    <div class="js-route-data"><b>First name:</b> <span class="first-name">Waiting for data...</span><br/><b>Last name:</b> <span class="last-name">Waiting for data...</span></div>
                    <h2>#3 Data</h2>
                    <pre><code class="js-queryparam-data">Waiting for data...</code></pre>
                    <h2>How does it work?</h2>
                    <div class="desc">
                    We can pass data directly to handler using <code>$.router.set</code> as shown below:
                    <pre><code>
    $.router.set({
        route: "/path/to/route",
        data: {key: "value"}
    });
    $.route("/path/to/route", function (<b>data</b>) { ... });
                    </code></pre>
                    <b>Please note that</b> the data should be passed as a JavaScript object. Jquery router extends default route object into a data object.<br/><br/>
                    Another way of passing data is through <b>route parameters</b>. Route parameters are convenient way of passing data which is unique (e.g. username).<br/>Route parameters are passed using dynamic routes. Example shown below:
                    <pre><code>
    $.route("/path/to/route/<b>:param</b>", function (data, <b>params</b>) { ... });
    $.router.set("/path/to/route/<b>value</b>");
                    </code></pre>
                    The third and final way of passing data is via query string. <b>Please note that</b> query string is not set to the route url directly. Instead, we pass it in a format below:
                    <pre><code>
    $.router.set({
        route: "path/to/route",
        <b>queryString: "q1=Hello&amp;q2=World"</b>
    });
    $.route("/path/to/route", function (data, param, <b>query</b>) { ... });
                    </code></pre>
                    </div>
                </div>
            </div>
        </section>
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
            crossorigin="anonymous"></script>
        <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" integrity="sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1"
            crossorigin="anonymous"></script>
        <script type="text/javascript" src="/js/router.js"></script>
    </div>
</body>

</html>