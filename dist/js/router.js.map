{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/jquerydeparam/src/deparam.js","webpack:///./src/js/router.js"],"names":["router","handlers","isHistorySupported","history","pushState","cache","trigger","regex","pathname","routeparams","eventNames","routeChanged","hashchange","popstate","errorMessage","invalidPath","invalidQueryString","_arr","arr","Array","prototype","slice","call","_isCallable","fn","Object","toString","route","sRoute","callback","split","path","query","push","eventName","handler","bind","el","isGeneric","_set","arguments","replace","TypeError","data","queryString","exact","jqrouter","set","apply","init","window","location","search"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,wCAAwC;AACxC;AACA,0DAA0D;AAC1D;AACA,2CAA2C,kCAAkC;AAC7E,YAAY;AACZ;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;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","file":"router.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Deparam plugin\n * Converts a querystring to a JavaScript object\n * @project      Deparam plugin\n * @date         2018-06-24\n * @author       Sachin Singh <ssingh.300889@gmail.com>\n * @version      1.0.0\n */\n\n/**\n * Converts query string to JavaScript object\n * @param {string} qs query string argument (defaults to url query string)\n */\nfunction deparam(qs = window.location.search) {\n    qs = decodeURIComponent(qs).replace(\"?\", \"\").trim();\n    if (qs === \"\") return {};\n    const queryParamList = qs.split(\"&\"),\n        queryObject = {};\n    queryParamList.forEach((qq) => {\n        const qArr = qq.split(\"=\");\n        if (_isComplex(...qArr)) {\n            _handleComplexQuery(...qArr, queryObject);\n        } else {\n            _handleSimpleQuery(qArr, queryObject);\n        }\n    });\n    return queryObject;\n}\n\n/**\n * Checks if input is a number\n * @param {*} key \n */\nfunction isNumber(key) {\n    if (key == null || typeof key === 'boolean') return false;\n    if (!key.toString().trim()) return false;\n    return !isNaN(Number(key));\n}\n\n/**\n * Checks if query parameter key is a complex notation\n * @param {string} q \n */\nfunction _isComplex(q) {\n    return (/\\[/.test(q));\n}\n\n/**\n * Resolves the target object for next iteration\n * @param {Object} ob current reference object\n * @param {string} nextProp reference property in current object\n */\nfunction _resolveTargetObject(ob, nextProp) {\n    // handle null value\n    if (ob === null) return { ob: [null] };\n    // Check if object\n    if (typeof ob === 'object') return { ob };\n    // Check if array\n    if (Array.isArray(ob) && !isNumber(nextProp)) return { ob: _convertToObject(ob) };\n    // Check if undefined\n    if (typeof ob === \"undefined\") return { ob: (isNumber(nextProp) ? [] : {}) };\n    return { ob: [ob], push: true };\n}\n\n/**\n * Handles complex query parameters\n * @param {string} key \n * @param {string} value \n * @param {Object} obj \n */\nfunction _handleComplexQuery(key, value, obj) {\n    const match = key.match(/([^\\[]+)\\[([^\\[]*)\\]/);\n    if (match && match.length === 3) {\n        let [, prop, nextProp] = match;\n        key = key.replace(/\\[([^\\[]*)\\]/, \"\");\n        if (_isComplex(key)) {\n            if (nextProp === \"\") nextProp = \"0\";\n            key = key.replace(/[^\\[]+/, nextProp);\n            _handleComplexQuery(key, value, obj[prop] = _resolveTargetObject(obj[prop], nextProp).ob);\n        } else {\n            if (nextProp) {\n                const { ob, push } = _resolveTargetObject(obj[prop], nextProp);\n                obj[prop] = ob;\n                if (push) {\n                    obj[prop].push({\n                        [nextProp]: _val(value)\n                    });\n                } else {\n                    obj[prop][nextProp] = _val(value);\n                }\n            } else {\n                _handleSimpleQuery([match[1], value], obj, true);\n            }\n        }\n    }\n}\n\n/**\n * Handles simple query\n * @param {array} qArr \n * @param {Object} queryObject \n * @param {boolean} convertToArray \n */\nfunction _handleSimpleQuery(qArr, queryObject, convertToArray) {\n    let [key, value] = qArr;\n    // Convert to appropriate type\n    value = _val(value);\n    if (key in queryObject) {\n        queryObject[key] = Array.isArray(queryObject[key]) ? queryObject[key] : [queryObject[key]];\n        queryObject[key].push(value);\n    } else {\n        queryObject[key] = convertToArray ? [value] : value;\n    }\n}\n\n/**\n * Restores values to their original type\n * @param {string} value \n */\nfunction _val(value) {\n    if (value == null) return \"\";\n    value = value.toString().trim();\n    if (value === \"undefined\") return;\n    if (value === \"null\") return null;\n    if (value === \"NaN\") return NaN;\n    if (!isNaN(+value)) return +value;\n    if (value.toLowerCase() === \"true\") return true;\n    if (value.toLowerCase() === \"false\") return false;\n    return value;\n}\n\n/**\n * Converts an array to an object\n * @param {array} arr \n */\nfunction _convertToObject(arr) {\n    var convertedObj = {};\n    if (Array.isArray(arr)) {\n        arr.forEach((value, index) => {\n            convertedObj[index] = value;\n        });\n        return convertedObj;\n    }\n    return {};\n}\n\n// Check if global jQuery object exists, then plug-in deparam function as a static method\nif (window.jQuery) {\n    jQuery.deparam = deparam;\n}\n\nexport default deparam;","/**\n * Routing plugin\n * This file contains SPA router methods to handle routing mechanism in single page applications (SPA). Supported versions IE9+, Chrome, Safari, Firefox\n *\n * @project      Routing plugin\n * @date         2018-06-24\n * @author       Sachin Singh <ssingh.300889@gmail.com>\n * @dependencies jQuery\n * @version      2.0.0\n */\n\n// Import dependencies\nimport deparam from 'jquerydeparam';\n\nconst router = { handlers: [] },\n    isHistorySupported = history && history.pushState,\n    cache = { trigger: true },\n    regex = {\n        pathname: /^\\/(?=[^?]*)/,\n        routeparams: /:[^\\/]+/g\n    },\n    eventNames = {\n        routeChanged: \"routeChanged\",\n        hashchange: \"hashchange\",\n        popstate: \"popstate\"\n    },\n    errorMessage = {\n        invalidPath: \"Path needs to be a valid string or object\",\n        invalidQueryString: \"Query string is of invalid type\"\n    };\n\n/**\n * Converts any list to JavaScript array\n * @param {array} arr \n */\nfunction _arr(arr) {\n    return Array.prototype.slice.call(arr);\n}\n\n/**\n * Checks if handler function is callable\n * @param {Function} fn handler function\n */\nfunction _isCallable(fn) {\n    return (typeof fn === 'function') || Object.prototype.toString.call(fn) === '[object Function]';\n}\n\n/**\n * Attaches a route handler\n * @param {string} sRoute route\n * @param {Function} callback callback function\n */\nfunction route(sRoute, callback) {\n    if (_isCallable(sRoute)) {\n        callback = sRoute;\n        sRoute = '*';\n    }\n    if (typeof sRoute === 'string' && _isCallable(callback)) {\n        const [path, query] = sRoute.split('?');\n        router.handlers.push({\n            eventName: eventNames.routeChanged,\n            handler: callback.bind(this),\n            el: this,\n            path,\n            query,\n            isGeneric: (sRoute === '*')\n        });\n    }\n}\n\n/**\n * Sets a route handler\n * @param {string|Object} route route options\n * @param {Boolean} replace activates replace mode (defaults to false)\n * @param {Boolean} trigger disables route handler if false (defaults to true)\n */\nfunction _set() {\n    let [path, replace = false, trigger = true] = arguments;\n    if (path == null) throw new TypeError(errorMessage.invalidPath);\n    // Convert route string to object\n    if (typeof path !== 'object') {\n        path = { route: path.toString() };\n    }\n    // Destructure route object to get route parts\n    let { route, data = {}, queryString = '', exact = false } = path;\n    if (typeof queryString !== 'string') throw new TypeError(errorMessage.invalidQueryString);\n    // Get query string from path if not specified\n    [route, queryString = ''] = route.split('?');\n}\n\nconst jqrouter = {\n    set() {\n        return _set.apply(this, arguments);\n    },\n    init() {\n        return this.set(window.location.pathname + window.location.search);\n    }\n}\n\nexport { route, jqrouter as router };"],"sourceRoot":""}