!function (t, e, n) { function a() { return g.noTrigger ? void (g.noTrigger = !1) : void e.router.events.trigger(f.routeChanged, { data: g.data }) } function o(t) { throw new Error(t) } function r(t) { return "string" != typeof t ? !1 : p.pathname.test(t) } function i(t) { return r(t) ? t : void o(v.invalidPath) } function u(a, o, r) { var u = null, h = null, d = "", l = o ? "replaceState" : "pushState"; g.noTrigger = r, "object" == typeof a ? (g.data = u = a.data, h = a.title, d = a.route) : "string" == typeof a && (d = a), c ? (n[l]({ data: u }, h, i(d)), r || e.router.events.trigger(f.routeChanged, { data: g.data })) : o ? t.location.replace("#" + d) : t.location.hash = i(d) } function h(t, e) { s.handlers.push({ eventName: f.routeChanged, handler: e.bind(this), element: this, route: t }) } function d(e, n) { n = n || {}, s.handlers.forEach(function (a) { a.eventName === e && (c && a.route === t.location.pathname ? a.handler(n.data) : t.location.hash || a.route !== t.location.pathname ? a.route === t.location.hash.substring(1) && a.handler(n.data) : (g.data = n.data, t.location.replace("#" + t.location.pathname))) }) } function l() { c ? e(t).on("popstate", a) : e(t).on("hashchange", a) } if (e && e.fn) { var s = { handlers: [] }, c = n && n.pushState, g = { noTrigger: !1 }, p = { pathname: /^\/(?=[^?]+)/ }, f = { routeChanged: "routeChanged" }, v = { invalidPath: "Path is invalid" }; if (e.router || (e.router = { events: f, init: function () { e.router.events.trigger(f.routeChanged) }, historySupported: c }, e.router.events.trigger = function (t, e) { d.apply(this, [t, e]) }), !e.fn.route) { var y = e.fn.route = function (t, e) { h.apply(this, [t, e]) }; e.route || (e.route = y.bind(null)) } e.setRoute || (e.setRoute = function (t, e, n) { u.apply(this, [t, e, n]) }), (s.init = l)() } }(window, window.jQuery, window.history);